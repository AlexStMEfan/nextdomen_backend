syntax = "proto3";

package organization_api;

service OrganizationService {
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse);
}

message CreateOrganizationRequest {
  string name = 1;
  string legal_name = 2;
  string tax_id = 3;
  string phone = 4;
  string email = 5;
  string website = 6;
  Address address = 7;
}

message Address {
  string street = 1;
  string city = 2;
  string state = 3;
  string postal_code = 4;
  string country = 5; // ISO 3166-1 alpha-2
}

message CreateOrganizationResponse {
  string id = 1;
  int64 created_at = 2; // Unix timestamp
}

message GetOrganizationRequest {
  string id = 1;
}

message GetOrganizationResponse {
  string id = 1;
  string name = 2;
  string legal_name = 3;
  string tax_id = 4;
  string phone = 5;
  string email = 6;
  string website = 7;
  Address address = 8;
  int64 created_at = 9;
  int64 updated_at = 10;
}

message ListOrganizationsRequest {}

message ListOrganizationsResponse {
  repeated GetOrganizationResponse organizations = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  string name = 2;
  string legal_name = 3;
  string phone = 4;
  string email = 5;
  string website = 6;
  Address address = 7;
}

message UpdateOrganizationResponse {
  int64 updated_at = 1;
}

message DeleteOrganizationRequest {
  string id = 1;
}

message DeleteOrganizationResponse {}